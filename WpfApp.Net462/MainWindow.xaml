<Window x:Class="WpfApp.Net462.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp.Net462"
        xmlns:markup="clr-namespace:XamlExtensions.Markup;assembly=XamlExtensions"
        xmlns:i18NRes="clr-namespace:WpfApp.Net462.I18nRes"
        mc:Ignorable="d"
        Title="MainWindow"
        Height="450"
        Width="800"
        d:DataContext="{d:DesignInstance {x:Type local:MainWindowViewModel}}">

    <Window.Resources>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <Style x:Key="LinkButtonStyle"
               TargetType="ButtonBase">
            <Setter Property="FocusVisualStyle"
                    Value="{x:Null}" />
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Foreground"
                    Value="#008EFF" />
            <Setter Property="FontSize"
                    Value="13" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="true">
                            <StackPanel Orientation="Horizontal">
                                <Ellipse VerticalAlignment="Center"
                                         HorizontalAlignment="Center"
                                         Visibility="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Converter={markup:Compose {StaticResource IsNullOrEmptyOperator}, {StaticResource BooleanToVisibilityConverter}}}"
                                         Height="8"
                                         Width="8"
                                         Fill="BlueViolet">

                                </Ellipse>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Foreground"
                                        Value="#42ABFF" />
                                <Setter Property="Cursor"
                                        Value="Hand" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter Property="Foreground"
                                        Value="#0076D5" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Foreground"
                                        Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <StackPanel>

        <Button Command="{Binding LoadCommand}"
                Width="200"
                Height="30"
                Margin="20">Load Data</Button>

        <Button Command="{Binding SwitchCultureCommand}"
                Width="200"
                Height="30"
                Margin="20">Switch Culture</Button>

        <UserControl>
            <markup:If Condition="{Binding IsLoading}">

                <markup:If.True>
                    <TextBlock Text="Loading Data..."
                               FontSize="50"
                               Foreground="BlueViolet"
                               FontWeight="Bold"
                               HorizontalAlignment="Center" />
                </markup:If.True>

                <markup:If.False>
                    <Border BorderThickness="1"
                            BorderBrush="BlueViolet"
                            Margin="10">
                        <StackPanel>
                            <Button Style="{StaticResource LinkButtonStyle}"
                                    Content="{Binding InputText}" />

                            <TextBlock Text="{markup:I18n {x:Static i18NRes:ResKeys.TestString_WithoutFormat}}" />
                            <TextBlock Text="{markup:I18n {x:Static i18NRes:ResKeys.TestString_WithFormat1}, 
                                                          {Binding InputText}}" />
                            <TextBlock Text="{markup:I18n {x:Static i18NRes:ResKeys.TestString_WithFormat3},
                                                          {Binding InputText},
                                                          'RANDOM TEXT',
                                                          '2311231'}" />
                            <TextBox Margin="20"
                                     Text="{Binding InputText, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBox Margin="20"
                                     Text="{Binding InputText, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBox Margin="20"
                                     Text="{Binding InputText, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>
                    </Border>
                </markup:If.False>

            </markup:If>
        </UserControl>

    </StackPanel>

</Window>
