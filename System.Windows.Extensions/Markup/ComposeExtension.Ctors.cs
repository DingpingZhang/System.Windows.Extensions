//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a T4 template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Windows.Data;

namespace System.Windows.Extensions.Markup
{
    public partial class ComposeExtension
    {
		/*
		 * Have to list these constructor overloads here,
		 * because the stupid xaml does not support the "params" keyword.
		 * e.g.: ctor(params IValueConverter[] converters) cannot be used.
		 */

		public ComposeExtension() { }

		public ComposeExtension(IValueConverter item0, IValueConverter item1)
		{
			Converters.Add(item0);
			Converters.Add(item1);
		}

		public ComposeExtension(IValueConverter item0, IValueConverter item1, IValueConverter item2)
		{
			Converters.Add(item0);
			Converters.Add(item1);
			Converters.Add(item2);
		}

		public ComposeExtension(IValueConverter item0, IValueConverter item1, IValueConverter item2, IValueConverter item3)
		{
			Converters.Add(item0);
			Converters.Add(item1);
			Converters.Add(item2);
			Converters.Add(item3);
		}

		public ComposeExtension(IValueConverter item0, IValueConverter item1, IValueConverter item2, IValueConverter item3, IValueConverter item4)
		{
			Converters.Add(item0);
			Converters.Add(item1);
			Converters.Add(item2);
			Converters.Add(item3);
			Converters.Add(item4);
		}

		public ComposeExtension(IValueConverter item0, IValueConverter item1, IValueConverter item2, IValueConverter item3, IValueConverter item4, IValueConverter item5)
		{
			Converters.Add(item0);
			Converters.Add(item1);
			Converters.Add(item2);
			Converters.Add(item3);
			Converters.Add(item4);
			Converters.Add(item5);
		}

		public ComposeExtension(IValueConverter item0, IValueConverter item1, IValueConverter item2, IValueConverter item3, IValueConverter item4, IValueConverter item5, IValueConverter item6)
		{
			Converters.Add(item0);
			Converters.Add(item1);
			Converters.Add(item2);
			Converters.Add(item3);
			Converters.Add(item4);
			Converters.Add(item5);
			Converters.Add(item6);
		}

		public ComposeExtension(IValueConverter item0, IValueConverter item1, IValueConverter item2, IValueConverter item3, IValueConverter item4, IValueConverter item5, IValueConverter item6, IValueConverter item7)
		{
			Converters.Add(item0);
			Converters.Add(item1);
			Converters.Add(item2);
			Converters.Add(item3);
			Converters.Add(item4);
			Converters.Add(item5);
			Converters.Add(item6);
			Converters.Add(item7);
		}

		public ComposeExtension(IValueConverter item0, IValueConverter item1, IValueConverter item2, IValueConverter item3, IValueConverter item4, IValueConverter item5, IValueConverter item6, IValueConverter item7, IValueConverter item8)
		{
			Converters.Add(item0);
			Converters.Add(item1);
			Converters.Add(item2);
			Converters.Add(item3);
			Converters.Add(item4);
			Converters.Add(item5);
			Converters.Add(item6);
			Converters.Add(item7);
			Converters.Add(item8);
		}

		public ComposeExtension(IValueConverter item0, IValueConverter item1, IValueConverter item2, IValueConverter item3, IValueConverter item4, IValueConverter item5, IValueConverter item6, IValueConverter item7, IValueConverter item8, IValueConverter item9)
		{
			Converters.Add(item0);
			Converters.Add(item1);
			Converters.Add(item2);
			Converters.Add(item3);
			Converters.Add(item4);
			Converters.Add(item5);
			Converters.Add(item6);
			Converters.Add(item7);
			Converters.Add(item8);
			Converters.Add(item9);
		}

		public ComposeExtension(IValueConverter item0, IValueConverter item1, IValueConverter item2, IValueConverter item3, IValueConverter item4, IValueConverter item5, IValueConverter item6, IValueConverter item7, IValueConverter item8, IValueConverter item9, IValueConverter item10)
		{
			Converters.Add(item0);
			Converters.Add(item1);
			Converters.Add(item2);
			Converters.Add(item3);
			Converters.Add(item4);
			Converters.Add(item5);
			Converters.Add(item6);
			Converters.Add(item7);
			Converters.Add(item8);
			Converters.Add(item9);
			Converters.Add(item10);
		}

		public ComposeExtension(IValueConverter item0, IValueConverter item1, IValueConverter item2, IValueConverter item3, IValueConverter item4, IValueConverter item5, IValueConverter item6, IValueConverter item7, IValueConverter item8, IValueConverter item9, IValueConverter item10, IValueConverter item11)
		{
			Converters.Add(item0);
			Converters.Add(item1);
			Converters.Add(item2);
			Converters.Add(item3);
			Converters.Add(item4);
			Converters.Add(item5);
			Converters.Add(item6);
			Converters.Add(item7);
			Converters.Add(item8);
			Converters.Add(item9);
			Converters.Add(item10);
			Converters.Add(item11);
		}

		public ComposeExtension(IValueConverter item0, IValueConverter item1, IValueConverter item2, IValueConverter item3, IValueConverter item4, IValueConverter item5, IValueConverter item6, IValueConverter item7, IValueConverter item8, IValueConverter item9, IValueConverter item10, IValueConverter item11, IValueConverter item12)
		{
			Converters.Add(item0);
			Converters.Add(item1);
			Converters.Add(item2);
			Converters.Add(item3);
			Converters.Add(item4);
			Converters.Add(item5);
			Converters.Add(item6);
			Converters.Add(item7);
			Converters.Add(item8);
			Converters.Add(item9);
			Converters.Add(item10);
			Converters.Add(item11);
			Converters.Add(item12);
		}

		public ComposeExtension(IValueConverter item0, IValueConverter item1, IValueConverter item2, IValueConverter item3, IValueConverter item4, IValueConverter item5, IValueConverter item6, IValueConverter item7, IValueConverter item8, IValueConverter item9, IValueConverter item10, IValueConverter item11, IValueConverter item12, IValueConverter item13)
		{
			Converters.Add(item0);
			Converters.Add(item1);
			Converters.Add(item2);
			Converters.Add(item3);
			Converters.Add(item4);
			Converters.Add(item5);
			Converters.Add(item6);
			Converters.Add(item7);
			Converters.Add(item8);
			Converters.Add(item9);
			Converters.Add(item10);
			Converters.Add(item11);
			Converters.Add(item12);
			Converters.Add(item13);
		}

		public ComposeExtension(IValueConverter item0, IValueConverter item1, IValueConverter item2, IValueConverter item3, IValueConverter item4, IValueConverter item5, IValueConverter item6, IValueConverter item7, IValueConverter item8, IValueConverter item9, IValueConverter item10, IValueConverter item11, IValueConverter item12, IValueConverter item13, IValueConverter item14)
		{
			Converters.Add(item0);
			Converters.Add(item1);
			Converters.Add(item2);
			Converters.Add(item3);
			Converters.Add(item4);
			Converters.Add(item5);
			Converters.Add(item6);
			Converters.Add(item7);
			Converters.Add(item8);
			Converters.Add(item9);
			Converters.Add(item10);
			Converters.Add(item11);
			Converters.Add(item12);
			Converters.Add(item13);
			Converters.Add(item14);
		}

		public ComposeExtension(IValueConverter item0, IValueConverter item1, IValueConverter item2, IValueConverter item3, IValueConverter item4, IValueConverter item5, IValueConverter item6, IValueConverter item7, IValueConverter item8, IValueConverter item9, IValueConverter item10, IValueConverter item11, IValueConverter item12, IValueConverter item13, IValueConverter item14, IValueConverter item15)
		{
			Converters.Add(item0);
			Converters.Add(item1);
			Converters.Add(item2);
			Converters.Add(item3);
			Converters.Add(item4);
			Converters.Add(item5);
			Converters.Add(item6);
			Converters.Add(item7);
			Converters.Add(item8);
			Converters.Add(item9);
			Converters.Add(item10);
			Converters.Add(item11);
			Converters.Add(item12);
			Converters.Add(item13);
			Converters.Add(item14);
			Converters.Add(item15);
		}

    }
}
